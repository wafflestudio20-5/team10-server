name: CI-CD pipeline to AWS
env:
  EB_S3_BUCKET_NAME: etl-clone-toyproject
  EB_APPLICATION_NAME: etl-clone-toyproject
  EB_ENVIRONMENT_NAME: Etlclonetoyproject-env
  # 보통 앱 이름에 -env 형태로 자동 생성
  DEPLOY_PACKAGE_NAME: django-app-${{ github.sha }}.zip
  AWS_REGION_NAME: ap-northeast-2

on:
  push:
    branches:
        - deploy-test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Create .env
        env:
          SECRET_KEY: ${{ secrets.secret_key }}
          LOCAL_HOST: ${{ secrets.local_host }}
        run:
          touch .env
          echo SECRET_KEY="$SECRET_KEY" >> .env
          echo LOCAL_HOST="$LOCAL_HOST" >> .env
          cat .env

      - name: Git clone on our repo
        uses: actions/checkout@v2

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Copying file to S3
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_S3_BUCKET_NAME }}/

      - name: Print message on success finish
        run: echo "CI part finished successfully"

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Setup python3-dev
        run: sudo apt-get install python3-dev
      - name: Setup libmysqlclient-dev
        run: sudo apt-get install libmysqlclient-dev
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ env.AWS_REGION_NAME }}

      - name: Create new EBL app ver
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "${{ github.sha }}"

      - name: Deploy new app
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "${{ github.sha }}"

      - name: Print message on success finish
        run: echo "CD part finished successfully"